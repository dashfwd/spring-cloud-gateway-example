
buildscript {
	ext.kotlin_version = '1.4.30'
	repositories {
		mavenCentral()
		jcenter()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}

	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
		classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
		classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_version"
	}
}

plugins {
	id "idea"
}

apply plugin: "kotlin"
apply plugin: "kotlin-spring"
apply plugin: "idea"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"

repositories {
	mavenCentral()
}

group = 'com.dashfwd'
version = '1.0'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:Hoxton.SR9"
	}
}

dependencies {
	implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
	implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

	implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"

	implementation("org.springframework.cloud:spring-cloud-starter-gateway:$spring_cloud_version")

    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.12.1"

	runtime "net.logstash.logback:logstash-logback-encoder:6.6"

	compile "io.github.microutils:kotlin-logging:2.0.4"

	implementation "org.apache.httpcomponents:httpclient:4.5.13"

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	implementation ('com.sksamuel.hoplite:hoplite-yaml:1.4.0') {
		because('use yml files for config')
	}

	testImplementation ("org.springframework.boot:spring-boot-starter-test") {
		exclude group: 'junit', module: 'junit'
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"

}

test {
	useJUnitPlatform()
	testLogging.showStandardStreams = true
}

compileKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}

compileTestKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}
